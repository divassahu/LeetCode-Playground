ListNode prev=head;
    ListNode curr=head.next;

    while(curr!=null){
        if(curr.val==prev.val){
            prev.next=curr.next;
        }
        else{
            prev=curr;
        }
        curr=curr.next;
    }
    return head;

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int val) { this.val = val; }
 * }
 */
class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        if (head == null || head.next == null) {
            return head;
        }
        
        ListNode prev = head;
        ListNode curr = head.next;
        
        while (curr != null) {
            if (curr.val == prev.val) {
                prev.next = curr.next;
            } else {
                prev = curr;
            }
            curr = curr.next;
        }
        
        return head;
    }
}

class Solution {
    public int[] nextGreaterElement(int[] nums1, int[] nums2) {
        // Map to store the next greater element for each element in nums2
        Map<Integer, Integer> map = new HashMap<>();
        // Stack to store the elements whose next greater element is not yet found
        Stack<Integer> stack = new Stack<>();
        // Traverse nums2 from right to left
        for (int i = nums2.length - 1; i >= 0; i--) {
            int num = nums2[i];
            // Remove the elements from the stack which are smaller than the current element
            while (!stack.isEmpty() && stack.peek() < num) {
                stack.pop();
            }
            // If the stack is empty, then there is no next greater element for this element
            if (stack.isEmpty()) {
                map.put(num, -1);
            } else {
                map.put(num, stack.peek());
            }
            // Push the current element to the stack
            stack.push(num);
        }
        // Array to store the result
        int[] result = new int[nums1.length];
        // Traverse nums1 and find the next greater element for each element
        for (int i = 0; i < nums1.length; i++) {
            result[i] = map.get(nums1[i]);
        }
        return result;
    }
}
